name: Publish Registry.json Asset

on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

permissions:
  contents: write

env:
  RELEASE_TAG: registry-latest

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Generate new registry.json
        id: generate
        run: |
          python scripts/generate_registry.py
          # Verify the file was created
          if [ ! -f "registry.json" ]; then
            echo "Error: registry.json was not generated"
            exit 1
          fi

          # Calculate hash of new file
          NEW_HASH=$(sha256sum registry.json | cut -d ' ' -f 1)
          echo "new_hash=$NEW_HASH" >> $GITHUB_OUTPUT
          echo "New registry.json hash: $NEW_HASH"

      - name: Try to download existing registry.json
        id: download
        continue-on-error: true
        run: |
          curl -s -L -o existing-registry.json https://github.com/${{ github.repository }}/releases/download/${{ env.RELEASE_TAG }}/registry.json || echo "First run or download failed"
          if [ -f "existing-registry.json" ]; then
            EXISTING_HASH=$(sha256sum existing-registry.json | cut -d ' ' -f 1)
            echo "existing_hash=$EXISTING_HASH" >> $GITHUB_OUTPUT
            echo "Existing registry.json hash: $EXISTING_HASH"
          else
            echo "No existing registry.json found or download failed"
            echo "existing_hash=none" >> $GITHUB_OUTPUT
          fi

      - name: Determine if update is needed
        id: check
        run: |
          # If first run or hashes differ, update is needed
          if [ "${{ steps.download.outputs.existing_hash }}" != "${{ steps.generate.outputs.new_hash }}" ]; then
            echo "update_needed=true" >> $GITHUB_OUTPUT
            echo "Update needed: Content has changed or first run"
          else
            echo "update_needed=false" >> $GITHUB_OUTPUT
            echo "No update needed: Content is unchanged"
          fi

      - name: Update release and upload asset if needed
        if: steps.check.outputs.update_needed == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create or update the release
          gh release view ${{ env.RELEASE_TAG }} || \
          gh release create ${{ env.RELEASE_TAG }} \
            --title "Registry" \
            --notes "Latest registry.json" \

          echo "Uploading registry.json file..."
          gh release upload ${{ env.RELEASE_TAG }} registry.json \
            --clobber

      - name: Output result
        run: |
          if [ "${{ steps.check.outputs.update_needed }}" = "true" ]; then
            echo "✅ Registry updated with new content"
          else
            echo "ℹ️ No changes detected in registry.json, skipped update"
          fi
